
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  phone: 'phone',
  roleId: 'roleId'
};

exports.Prisma.PrinterScalarFieldEnum = {
  id: 'id',
  model: 'model',
  serialNumber: 'serialNumber',
  ownerId: 'ownerId'
};

exports.Prisma.RepairStatusScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.RepairRequestScalarFieldEnum = {
  id: 'id',
  printerId: 'printerId',
  description: 'description',
  accessories: 'accessories',
  statusId: 'statusId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RepairPartScalarFieldEnum = {
  id: 'id',
  repairRequestId: 'repairRequestId',
  partName: 'partName',
  quantity: 'quantity',
  price: 'price'
};

exports.Prisma.ShippingScalarFieldEnum = {
  id: 'id',
  repairRequestId: 'repairRequestId',
  courier: 'courier',
  trackingNumber: 'trackingNumber',
  shippedAt: 'shippedAt',
  status: 'status'
};

exports.Prisma.NoteScalarFieldEnum = {
  id: 'id',
  repairRequestId: 'repairRequestId',
  userId: 'userId',
  note: 'note',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Role: 'Role',
  User: 'User',
  Printer: 'Printer',
  RepairStatus: 'RepairStatus',
  RepairRequest: 'RepairRequest',
  RepairPart: 'RepairPart',
  Shipping: 'Shipping',
  Note: 'Note'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\coop\\Customer-Service-App-main\\prisma\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\coop\\Customer-Service-App-main\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\n// schema.prisma\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"./generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Role {\n  id    Int    @id @default(autoincrement())\n  name  String @unique\n  users User[]\n}\n\nmodel User {\n  id       Int       @id @default(autoincrement())\n  name     String\n  email    String    @unique\n  password String\n  phone    String?\n  role     Role      @relation(fields: [roleId], references: [id])\n  roleId   Int\n  printers Printer[]\n  notes    Note[]\n}\n\nmodel Printer {\n  id             Int             @id @default(autoincrement())\n  model          String\n  serialNumber   String          @unique\n  owner          User            @relation(fields: [ownerId], references: [id])\n  ownerId        Int\n  repairRequests RepairRequest[]\n}\n\nmodel RepairStatus {\n  id             Int             @id @default(autoincrement())\n  name           String          @unique\n  repairRequests RepairRequest[]\n}\n\nmodel RepairRequest {\n  id          Int          @id @default(autoincrement())\n  printer     Printer      @relation(fields: [printerId], references: [id])\n  printerId   Int\n  description String\n  accessories String?\n  status      RepairStatus @relation(fields: [statusId], references: [id])\n  statusId    Int\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n  repairParts RepairPart[]\n  shipping    Shipping?\n  notes       Note[]\n}\n\nmodel RepairPart {\n  id              Int           @id @default(autoincrement())\n  repairRequest   RepairRequest @relation(fields: [repairRequestId], references: [id])\n  repairRequestId Int\n  partName        String\n  quantity        Int\n  price           Float\n}\n\nmodel Shipping {\n  id              Int           @id @default(autoincrement())\n  repairRequest   RepairRequest @relation(fields: [repairRequestId], references: [id])\n  repairRequestId Int           @unique\n  courier         String\n  trackingNumber  String\n  shippedAt       DateTime?\n  status          String\n}\n\nmodel Note {\n  id              Int           @id @default(autoincrement())\n  repairRequest   RepairRequest @relation(fields: [repairRequestId], references: [id])\n  repairRequestId Int\n  user            User          @relation(fields: [userId], references: [id])\n  userId          Int\n  note            String\n  createdAt       DateTime      @default(now())\n}\n",
  "inlineSchemaHash": "edb500160e6619635aec7f18fddebebc760f8af3248459c5820dffc9ef543ad4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUser\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"printers\",\"kind\":\"object\",\"type\":\"Printer\",\"relationName\":\"PrinterToUser\"},{\"name\":\"notes\",\"kind\":\"object\",\"type\":\"Note\",\"relationName\":\"NoteToUser\"}],\"dbName\":null},\"Printer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"model\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"serialNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PrinterToUser\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repairRequests\",\"kind\":\"object\",\"type\":\"RepairRequest\",\"relationName\":\"PrinterToRepairRequest\"}],\"dbName\":null},\"RepairStatus\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repairRequests\",\"kind\":\"object\",\"type\":\"RepairRequest\",\"relationName\":\"RepairRequestToRepairStatus\"}],\"dbName\":null},\"RepairRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"printer\",\"kind\":\"object\",\"type\":\"Printer\",\"relationName\":\"PrinterToRepairRequest\"},{\"name\":\"printerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessories\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"object\",\"type\":\"RepairStatus\",\"relationName\":\"RepairRequestToRepairStatus\"},{\"name\":\"statusId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"repairParts\",\"kind\":\"object\",\"type\":\"RepairPart\",\"relationName\":\"RepairPartToRepairRequest\"},{\"name\":\"shipping\",\"kind\":\"object\",\"type\":\"Shipping\",\"relationName\":\"RepairRequestToShipping\"},{\"name\":\"notes\",\"kind\":\"object\",\"type\":\"Note\",\"relationName\":\"NoteToRepairRequest\"}],\"dbName\":null},\"RepairPart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repairRequest\",\"kind\":\"object\",\"type\":\"RepairRequest\",\"relationName\":\"RepairPartToRepairRequest\"},{\"name\":\"repairRequestId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"partName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"}],\"dbName\":null},\"Shipping\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repairRequest\",\"kind\":\"object\",\"type\":\"RepairRequest\",\"relationName\":\"RepairRequestToShipping\"},{\"name\":\"repairRequestId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trackingNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Note\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"repairRequest\",\"kind\":\"object\",\"type\":\"RepairRequest\",\"relationName\":\"NoteToRepairRequest\"},{\"name\":\"repairRequestId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NoteToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

